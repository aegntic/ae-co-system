# DailyDoco Pro Environment Configuration
# Copy this file to .env and customize for your environment

# =============================================================================
# CORE SERVICES CONFIGURATION
# =============================================================================

# Project name for Docker Compose
COMPOSE_PROJECT_NAME=dailydoco-pro

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database
POSTGRES_DB=dailydoco
POSTGRES_USER=dailydoco
POSTGRES_PASSWORD=your_secure_password_here
DATABASE_URL=postgresql://dailydoco:your_secure_password_here@postgres:5432/dailydoco

# Redis Configuration
REDIS_URL=redis://redis:6379
REDIS_MAXMEMORY=256mb

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret for authentication (generate with: openssl rand -base64 64)
JWT_SECRET=your_jwt_secret_here

# API Keys for external services
OPENAI_API_KEY=your_openai_key_here
ANTHROPIC_API_KEY=your_anthropic_key_here
OPENROUTER_API_KEY=your_openrouter_key_here

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment
NODE_ENV=production

# API URLs (internal service communication)
API_URL=http://api-server:8080
WS_URL=ws://api-server:8080

# External URLs (for browser access)
PUBLIC_API_URL=http://localhost:8080
PUBLIC_WS_URL=ws://localhost:8080
PUBLIC_DASHBOARD_URL=http://localhost:3000

# =============================================================================
# CAPTURE ENGINE CONFIGURATION
# =============================================================================

# Video capture settings
CAPTURE_QUALITY=high          # low, medium, high, ultra
CAPTURE_FPS=30                # Frames per second
CAPTURE_RESOLUTION=1920x1080  # Resolution for capture
GPU_ACCELERATION=true         # Enable GPU acceleration

# Storage settings
MAX_STORAGE_GB=100            # Maximum storage in GB
RETENTION_DAYS=30             # Days to keep recordings

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================

# Model cache and processing
AI_MODEL_CACHE_SIZE=2gb       # Cache size for AI models
MODEL_INFERENCE_TIMEOUT=30    # Timeout in seconds

# aegnt-27 Configuration
AEGNT27_ENABLED=true          # Enable aegnt-27 authenticity engine
AEGNT27_TIER=community        # community, commercial, enterprise
AEGNT27_AUTHENTICITY_TARGET=95 # Target authenticity score

# Test Audience Configuration
TEST_AUDIENCE_ENABLED=true    # Enable AI test audience
TEST_AUDIENCE_SIZE=50         # Number of synthetic viewers
ENGAGEMENT_PREDICTION_ACCURACY=85 # Target prediction accuracy

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Resource limits
CPU_LIMIT=4                   # CPU cores limit
MEMORY_LIMIT=8g               # Memory limit
DISK_LIMIT=50g                # Disk space limit

# Performance targets
TARGET_CPU_USAGE=5            # Target CPU usage percentage
TARGET_MEMORY_MB=200          # Target memory usage in MB
TARGET_PROCESSING_SPEED=2     # Target realtime multiplier

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# Logging configuration
LOG_LEVEL=info                # debug, info, warn, error
LOG_FORMAT=json               # json, text
LOG_RETENTION_DAYS=7          # Days to keep logs

# Metrics collection
METRICS_ENABLED=true          # Enable metrics collection
METRICS_INTERVAL=30           # Metrics collection interval in seconds

# Health check configuration
HEALTH_CHECK_INTERVAL=30      # Health check interval in seconds
HEALTH_CHECK_TIMEOUT=10       # Health check timeout in seconds

# =============================================================================
# DEVELOPMENT CONFIGURATION (for development environments only)
# =============================================================================

# Development flags
DEBUG_MODE=false              # Enable debug mode
HOT_RELOAD=false              # Enable hot reload for development
MOCK_AI_RESPONSES=false       # Use mock AI responses for testing

# Development ports (different from production)
DEV_DASHBOARD_PORT=3001
DEV_API_PORT=8081
DEV_MCP_PORT=8082

# =============================================================================
# ENTERPRISE FEATURES (for enterprise tier only)
# =============================================================================

# SSO Configuration
SSO_ENABLED=false
SSO_PROVIDER=saml             # saml, oauth2, ldap
SSO_METADATA_URL=https://your-sso-provider.com/metadata

# Enterprise monitoring
ENTERPRISE_MONITORING=false
PROMETHEUS_ENDPOINT=http://prometheus:9090
GRAFANA_ENDPOINT=http://grafana:3000

# Backup configuration
AUTOMATED_BACKUPS=false
BACKUP_SCHEDULE=0 2 * * *     # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE=s3://your-backup-bucket

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# External access configuration
ENABLE_SSL=false              # Enable SSL/HTTPS
SSL_CERT_PATH=/etc/ssl/certs/dailydoco.crt
SSL_KEY_PATH=/etc/ssl/private/dailydoco.key

# Domain configuration (for production deployments)
DOMAIN=localhost
SUBDOMAIN_API=api
SUBDOMAIN_DASHBOARD=app

# Network security
CORS_ORIGINS=http://localhost:3000,http://localhost:3001
RATE_LIMIT_REQUESTS=1000      # Requests per minute per IP
RATE_LIMIT_WINDOW=60          # Rate limit window in seconds