version: '3.9'

services:
  # Infrastructure
  redis:
    image: redis:7-alpine
    container_name: viral-growth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - viral-growth-network

  postgres:
    image: postgres:15-alpine
    container_name: viral-growth-postgres
    environment:
      POSTGRES_DB: ultraplan_growth
      POSTGRES_USER: ultraplan
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ultraplan123}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ultraplan"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - viral-growth-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: viral-growth-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - viral-growth-network

  grafana:
    image: grafana/grafana:latest
    container_name: viral-growth-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - viral-growth-network

  # Core Services
  content-engine:
    build:
      context: ./content-engine
      dockerfile: Dockerfile
    container_name: viral-growth-content-engine
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_URL: postgres://ultraplan:${POSTGRES_PASSWORD:-ultraplan123}@postgres:5432/ultraplan_growth
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./content-engine/logs:/app/logs
      - ./content-engine/temp:/app/temp
    restart: unless-stopped
    networks:
      - viral-growth-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  social-proof:
    build:
      context: ./social-proof
      dockerfile: Dockerfile
    container_name: viral-growth-social-proof
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_URL: postgres://ultraplan:${POSTGRES_PASSWORD:-ultraplan123}@postgres:5432/ultraplan_growth
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./social-proof/logs:/app/logs
      - ./social-proof/media:/app/media
    restart: unless-stopped
    networks:
      - viral-growth-network

  referral-system:
    build:
      context: ./referral-system
      dockerfile: Dockerfile
    container_name: viral-growth-referral-system
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_URL: postgres://ultraplan:${POSTGRES_PASSWORD:-ultraplan123}@postgres:5432/ultraplan_growth
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./referral-system/logs:/app/logs
    restart: unless-stopped
    networks:
      - viral-growth-network

  partnership-bot:
    build:
      context: ./partnership-bot
      dockerfile: Dockerfile
    container_name: viral-growth-partnership-bot
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_URL: postgres://ultraplan:${POSTGRES_PASSWORD:-ultraplan123}@postgres:5432/ultraplan_growth
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./partnership-bot/logs:/app/logs
      - ./partnership-bot/contracts:/app/contracts
    restart: unless-stopped
    networks:
      - viral-growth-network

  community-ai:
    build:
      context: ./community-ai
      dockerfile: Dockerfile
    container_name: viral-growth-community-ai
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_URL: postgres://ultraplan:${POSTGRES_PASSWORD:-ultraplan123}@postgres:5432/ultraplan_growth
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./community-ai/logs:/app/logs
    restart: unless-stopped
    networks:
      - viral-growth-network

  # API Gateway
  api-gateway:
    image: kong:3.4-alpine
    container_name: viral-growth-api-gateway
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - ./api-gateway/kong.yml:/kong/declarative/kong.yml
    depends_on:
      - content-engine
      - social-proof
      - referral-system
      - partnership-bot
      - community-ai
    networks:
      - viral-growth-network

  # Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: viral-growth-dashboard
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://api-gateway:8000
    depends_on:
      - api-gateway
    volumes:
      - ./dashboard/logs:/app/logs
    restart: unless-stopped
    networks:
      - viral-growth-network

  # Queue UI
  bull-board:
    image: deadly0/bull-board:latest
    container_name: viral-growth-bull-board
    ports:
      - "3002:3000"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
    depends_on:
      - redis
    networks:
      - viral-growth-network

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  viral-growth-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16